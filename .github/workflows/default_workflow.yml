name: "CI/CD"

on:
  push:
    branches:
      - feature/**

jobs:
  docker:
      name: Docker Build/Push
      runs-on: ubuntu-latest
      timeout-minutes: 20
      defaults:
        run:
          shell: bash

      steps:

      - name: checkout codebase
        uses: actions/checkout@v3

      - name: get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34

      - name: declare variables for branch
        id: vars
        shell: bash
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - name: variable values
        run: |
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"
          
      - name: list all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      - name: get changed dockerfile
        id: changed-files-specific
        uses: tj-actions/changed-files@v34
        with:
          files: |
            Dockerfile

      - name: docker setup
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker-practice/actions-setup-docker@master

      - name: login to Docker Hub
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: install pre-requisite packages for dockerfile
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v2
    
      - name: compile dockerfile & push
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: docker/build-push-action@v3
        with:
          dockerfile:  . 
          push: true
          tags: usaamahahmed101/gcp:${{ steps.vars.outputs.sha_short }}

  terraform_deployment:
      name: Terraform Deployment
      runs-on: macos-latest
      timeout-minutes: 20
      defaults:
        run:
          shell: bash

      steps: 
      - name: checkout codebase
        uses: actions/checkout@v3

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8

      - name: login to gcp
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: set up gcloud
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: devops-361723

      - name: setup Python
        uses: actions/setup-python@v4

      - name: install key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PRIVATE }}
          name: id_rsa 
          known_hosts: unnecessary  

      - name: terraform fmt check 
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: terraform initialize 
        id: init
        run: terraform init

      - name: terraform plan 
        id: plan
        run: terraform plan 

      - name: terraform apply 
        id: apply
        run: terraform apply -auto-approve -input=false 

      - name: Terraform destroy 
        id: destroy
        run: terraform destroy -auto-approve -input=false 